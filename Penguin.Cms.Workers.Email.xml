<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Cms.Workers.Email</name>
    </assembly>
    <members>
        <member name="T:Penguin.Cms.Workers.Email.EmailWorker">
            <summary>
            This worker retrieves unsent emails from the EmailRepository that are scheduled to go out, and attempts to send them through a mail service
            </summary>
        </member>
        <member name="P:Penguin.Cms.Workers.Email.EmailWorker.Delay">
            <summary>
            The intended amount of time between runs
            </summary>
        </member>
        <member name="P:Penguin.Cms.Workers.Email.EmailWorker.EmailRepository">
            <summary>
            The email repository to use when interacting with the email queue
            </summary>
        </member>
        <member name="P:Penguin.Cms.Workers.Email.EmailWorker.Mail">
            <summary>
            The mail service to use when sending emails
            </summary>
        </member>
        <member name="M:Penguin.Cms.Workers.Email.EmailWorker.#ctor(Penguin.Cms.Email.Repositories.EmailRepository,Penguin.Email.Services.MailService,Penguin.Workers.Repositories.WorkerRepository,Penguin.Persistence.Abstractions.Interfaces.IRepository{Penguin.Cms.Logging.Entities.LogEntry},Penguin.Persistence.Abstractions.Interfaces.IRepository{Penguin.Cms.Errors.AuditableError},Penguin.Messaging.Core.MessageBus)">
            <summary>
            Constructs a new instance of this email worker
            </summary>
            <param name="emailRepository">The email repository to use when interacting with the email queue</param>
            <param name="mail">The mail service to use when sending emails</param>
            <param name="workerRepository">A worker repository to record relevant worker information in</param>
            <param name="logEntryRepository">A log entry repository to log out run-time messages</param>
            <param name="errorRepository">An error repository to record any exceptions</param>
            <param name="messageBus">An optional message bus to send out messages related to the state of this worker</param>
        </member>
        <member name="M:Penguin.Cms.Workers.Email.EmailWorker.RunWorker(System.String[])">
            <summary>
            Executes the email worker, attempting to send the next 100 messages in the queue
            </summary>
        </member>
    </members>
</doc>
